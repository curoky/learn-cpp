[
    { symbol: [ "blkcnt_t", public, "<sys/stat.h>", public ] },
    { symbol: [ "blkcnt_t", public, "<sys/types.h>", public ] },
    { symbol: [ "blksize_t", public, "<sys/stat.h>", public ] },
    { symbol: [ "blksize_t", public, "<sys/types.h>", public ] },
    { symbol: [ "daddr_t", public, "<tirpc/rpc/types.h>", public ] },
    { symbol: [ "daddr_t", public, "<sys/types.h>", public ] },
    { symbol: [ "dev_t", public, "<sys/stat.h>", public ] },
    { symbol: [ "dev_t", public, "<sys/types.h>", public ] },
    { symbol: [ "error_t", public, "<argp.h>", public ] },
    { symbol: [ "error_t", public, "<argz.h>", public ] },
    { symbol: [ "fsblkcnt_t", public, "<sys/statvfs.h>", public ] },
    { symbol: [ "fsblkcnt_t", public, "<sys/types.h>", public ] },
    { symbol: [ "fsfilcnt_t", public, "<sys/statvfs.h>", public ] },
    { symbol: [ "fsfilcnt_t", public, "<sys/types.h>", public ] },
    { symbol: [ "gid_t", public, "<grp.h>", public ] },
    { symbol: [ "gid_t", public, "<pwd.h>", public ] },
    { symbol: [ "gid_t", public, "<unistd.h>", public ] },
    { symbol: [ "gid_t", public, "<sys/ipc.h>", public ] },
    { symbol: [ "gid_t", public, "<sys/stat.h>", public ] },
    { symbol: [ "gid_t", public, "<sys/types.h>", public ] },
    { symbol: [ "__gwchar_t", public, "<inttypes.h>", public ] },
    { symbol: [ "id_t", public, "<sys/resource.h>", public ] },
    { symbol: [ "id_t", public, "<sys/types.h>", public ] },
    { symbol: [ "id_t", public, "<sys/wait.h>", public ] },
    { symbol: [ "ino64_t", public, "<dirent.h>", public ] },
    { symbol: [ "ino64_t", public, "<sys/types.h>", public ] },
    { symbol: [ "ino_t", public, "<dirent.h>", public ] },
    { symbol: [ "ino_t", public, "<sys/stat.h>", public ] },
    { symbol: [ "ino_t", public, "<sys/types.h>", public ] },
    { symbol: [ "intptr_t", public, "<stdint.h>", public ] },
    { symbol: [ "intptr_t", public, "<unistd.h>", public ] },
    { symbol: [ "key_t", public, "<sys/ipc.h>", public ] },
    { symbol: [ "key_t", public, "<sys/types.h>", public ] },
    { symbol: [ "ldiv_t", public, "<stdlib.h>", public ] },
    { symbol: [ "lldiv_t", public, "<stdlib.h>", public ] },
    { symbol: [ "mode_t", public, "<fcntl.h>", public ] },
    { symbol: [ "mode_t", public, "<sys/ipc.h>", public ] },
    { symbol: [ "mode_t", public, "<sys/mman.h>", public ] },
    { symbol: [ "mode_t", public, "<sys/stat.h>", public ] },
    { symbol: [ "mode_t", public, "<sys/types.h>", public ] },
    { symbol: [ "nlink_t", public, "<sys/stat.h>", public ] },
    { symbol: [ "nlink_t", public, "<sys/types.h>", public ] },
    { symbol: [ "off64_t", public, "<fcntl.h>", public ] },
    { symbol: [ "off64_t", public, "<stdio.h>", public ] },
    { symbol: [ "off64_t", public, "<unistd.h>", public ] },
    { symbol: [ "off64_t", public, "<sys/types.h>", public ] },
    { symbol: [ "off_t", public, "<fcntl.h>", public ] },
    { symbol: [ "off_t", public, "<stdio.h>", public ] },
    { symbol: [ "off_t", public, "<unistd.h>", public ] },
    { symbol: [ "off_t", public, "<sys/mman.h>", public ] },
    { symbol: [ "off_t", public, "<sys/stat.h>", public ] },
    { symbol: [ "off_t", public, "<sys/types.h>", public ] },
    { symbol: [ "pid_t", public, "<fcntl.h>", public ] },
    { symbol: [ "pid_t", public, "<sched.h>", public ] },
    { symbol: [ "pid_t", public, "<signal.h>", public ] },
    { symbol: [ "pid_t", public, "<termios.h>", public ] },
    { symbol: [ "pid_t", public, "<time.h>", public ] },
    { symbol: [ "pid_t", public, "<unistd.h>", public ] },
    { symbol: [ "pid_t", public, "<utmpx.h>", public ] },
    { symbol: [ "pid_t", public, "<sys/msg.h>", public ] },
    { symbol: [ "pid_t", public, "<sys/shm.h>", public ] },
    { symbol: [ "pid_t", public, "<sys/types.h>", public ] },
    { symbol: [ "pid_t", public, "<sys/wait.h>", public ] },
    { symbol: [ "socklen_t", public, "<arpa/inet.h>", public ] },
    { symbol: [ "socklen_t", public, "<unistd.h>", public ] },
    { symbol: [ "ssize_t", public, "<monetary.h>", public ] },
    { symbol: [ "ssize_t", public, "<stdio.h>", public ] },
    { symbol: [ "ssize_t", public, "<unistd.h>", public ] },
    { symbol: [ "ssize_t", public, "<sys/msg.h>", public ] },
    { symbol: [ "ssize_t", public, "<sys/types.h>", public ] },
    { symbol: [ "suseconds_t", public, "<sys/select.h>", public ] },
    { symbol: [ "suseconds_t", public, "<sys/time.h>", public ] },
    { symbol: [ "suseconds_t", public, "<sys/types.h>", public ] },
    { symbol: [ "u_char", public, "<tirpc/rpc/types.h>", public ] },
    { symbol: [ "u_char", public, "<sys/types.h>", public ] },
    { symbol: [ "uid_t", public, "<pwd.h>", public ] },
    { symbol: [ "uid_t", public, "<signal.h>", public ] },
    { symbol: [ "uid_t", public, "<unistd.h>", public ] },
    { symbol: [ "uid_t", public, "<sys/ipc.h>", public ] },
    { symbol: [ "uid_t", public, "<sys/stat.h>", public ] },
    { symbol: [ "uid_t", public, "<sys/types.h>", public ] },
    { symbol: [ "useconds_t", public, "<unistd.h>", public ] },
    { symbol: [ "useconds_t", public, "<sys/types.h>", public ] },
    { symbol: [ "NULL", public, "<locale.h>", public ] },
    { symbol: [ "NULL", public, "<sched.h>", public ] },
    { symbol: [ "NULL", public, "<stdio.h>", public ] },
    { symbol: [ "NULL", public, "<stdlib.h>", public ] },
    { symbol: [ "NULL", public, "<string.h>", public ] },
    { symbol: [ "NULL", public, "<time.h>", public ] },
    { symbol: [ "NULL", public, "<unistd.h>", public ] },
    { symbol: [ "NULL", public, "<wchar.h>", public ] },
    { symbol: [ "NULL", public, "<sys/param.h>", public ] },
    { symbol: [ "size_t", public, "<alloca.h>", public ] },
    { symbol: [ "size_t", public, "<dlfcn.h>", public ] },
    { symbol: [ "size_t", public, "<gconv.h>", public ] },
    { symbol: [ "size_t", public, "<grp.h>", public ] },
    { symbol: [ "size_t", public, "<gshadow.h>", public ] },
    { symbol: [ "size_t", public, "<iconv.h>", public ] },
    { symbol: [ "size_t", public, "<monetary.h>", public ] },
    { symbol: [ "size_t", public, "<printf.h>", public ] },
    { symbol: [ "size_t", public, "<pwd.h>", public ] },
    { symbol: [ "size_t", public, "<rpc/netdb.h>", public ] },
    { symbol: [ "size_t", public, "<sched.h>", public ] },
    { symbol: [ "size_t", public, "<scsi/sg.h>", public ] },
    { symbol: [ "size_t", public, "<search.h>", public ] },
    { symbol: [ "size_t", public, "<shadow.h>", public ] },
    { symbol: [ "size_t", public, "<stdio.h>", public ] },
    { symbol: [ "size_t", public, "<stdlib.h>", public ] },
    { symbol: [ "size_t", public, "<string.h>", public ] },
    { symbol: [ "size_t", public, "<strings.h>", public ] },
    { symbol: [ "size_t", public, "<time.h>", public ] },
    { symbol: [ "size_t", public, "<uchar.h>", public ] },
    { symbol: [ "size_t", public, "<unistd.h>", public ] },
    { symbol: [ "size_t", public, "<wchar.h>", public ] },
    { symbol: [ "size_t", public, "<wordexp.h>", public ] },
    { symbol: [ "size_t", public, "<sys/mman.h>", public ] },
    { symbol: [ "size_t", public, "<sys/msg.h>", public ] },
    { symbol: [ "size_t", public, "<sys/sem.h>", public ] },
    { symbol: [ "size_t", public, "<sys/shm.h>", public ] },
    { symbol: [ "size_t", public, "<sys/socket.h>", public ] },
    { symbol: [ "size_t", public, "<sys/types.h>", public ] },
    { symbol: [ "__va_list", public, "<err.h>", public ] },
    { symbol: [ "__va_list", public, "<stdio.h>", public ] },
    { symbol: [ "__va_list", public, "<wchar.h>", public ] },
    { symbol: [ "__va_list", public, "<sys/syslog.h>", public ] },
    { symbol: [ "wchar_t", public, "<gconv.h>", public ] },
    { symbol: [ "wchar_t", public, "<printf.h>", public ] },
    { symbol: [ "wchar_t", public, "<stdlib.h>", public ] },
    { symbol: [ "wchar_t", public, "<wchar.h>", public ] },
  # Kludge time: almost all STL types take an allocator, but they
  # almost always use the default value.  Usually we detect that
  # and don't try to do IWYU, but sometimes it passes through.
  # For instance, when adding two strings, we end up calling
  #    template<_CharT,_Traits,_Alloc> ... operator+(
  #       basic_string<_CharT,_Traits,_Alloc>, ...)
  # These look like normal template args to us, so we see they're
  # used and declare an iwyu dependency, even though we don't need
  # to #include the traits or alloc type ourselves.  The surest way
  # to deal with this is to just say that everyone provides
  # std::allocator.  We can add more here at need.
  { symbol: [ "std::allocator", private, "<memory>", public ] },
  { symbol: [ "std::allocator", private, "<string>", public ] },
  { symbol: [ "std::allocator", private, "<vector>", public ] },
  { symbol: [ "std::allocator", private, "<map>", public ] },
  { symbol: [ "std::allocator", private, "<set>", public ] },
  # A similar kludge for std::char_traits.  basic_string,
  # basic_ostream and basic_istream have this as a default template
  # argument, and sometimes it bleeds through when clang desugars the
  # string/ostream/istream type.
  { symbol: [ "std::char_traits", private, "<string>", public ] },
  { symbol: [ "std::char_traits", private, "<ostream>", public ] },
  { symbol: [ "std::char_traits", private, "<istream>", public ] },

  { symbol: [ "size_t", private, "<stddef.h>", public ] },
  { symbol: [ "std::size_t", private, "<cstddef>", public ] },
  { symbol: [ "std::size_t", private, "<cstdio>", public ] },
  { symbol: [ "std::size_t", private, "<cstdlib>", public ] },
  { symbol: [ "std::size_t", private, "<cstring>", public ] },
  { symbol: [ "std::size_t", private, "<ctime>", public ] },
  { symbol: [ "std::size_t", private, "<cuchar>", public ] },
  { symbol: [ "std::size_t", private, "<cwchar>", public ] }

  { symbol: [ "NULL", private, "<stddef.h>", public ] },  # 'canonical' location for NULL
  { symbol: [ "NULL", private, "<clocale>", public ] },
  { symbol: [ "NULL", private, "<cstddef>", public ] },
  { symbol: [ "NULL", private, "<cstdio>", public ] },
  { symbol: [ "NULL", private, "<cstdlib>", public ] },
  { symbol: [ "NULL", private, "<cstring>", public ] },
  { symbol: [ "NULL", private, "<ctime>", public ] },
  { symbol: [ "NULL", private, "<cwchar>", public ] },
  { symbol: [ "NULL", private, "<locale.h>", public ] },
  { symbol: [ "NULL", private, "<stdio.h>", public ] },
  { symbol: [ "NULL", private, "<stdlib.h>", public ] },
  { symbol: [ "NULL", private, "<string.h>", public ] },
  { symbol: [ "NULL", private, "<time.h>", public ] },
  { symbol: [ "NULL", private, "<wchar.h>", public ] },

]
